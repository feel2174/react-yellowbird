{"ast":null,"code":"import shortId from \"shortid\";\nimport produce from \"immer\";\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"개밍두\"\n    },\n    content: \"첫번째 게시글 #해시태그 #익스프레스\",\n    Images: [{\n      src: \"https://i.pinimg.com/originals/8b/10/30/8b1030d543debb94705830c14f005893.jpg\"\n    }, {\n      src: \"https://i.pinimg.com/originals/d3/f2/e6/d3f2e6f4da4bfc47a96a0e8aae1fffd4.jpg\"\n    }, {\n      src: \"https://i.pinimg.com/originals/84/7f/1b/847f1b9a5d591cdc4a7855e4479de128.jpg\"\n    }],\n    Comments: [{\n      User: {\n        nickname: \"nero\"\n      },\n      content: \"사랑해요\"\n    }, {\n      User: {\n        nickname: \"niro\"\n      },\n      content: \"대박이에요\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"devzucca\"\n  },\n  Images: [],\n  Comments: []\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"devzucca\"\n  }\n}); // 이전 상태를 액션을 통해 다음상태로 만들어내는 함수 (불변성!!)\n\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.mainPosts = [dummyPost(action.data), ...state.mainPosts];\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.postId);\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/reducers/post.js"],"names":["shortId","produce","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","generate","reducer","state","action","draft","error","filter","v","post","find","postId","unshift"],"mappings":"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","sourcesContent":["import shortId from \"shortid\";\nimport produce from \"immer\";\n\nexport const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: \"개밍두\",\n      },\n      content: \"첫번째 게시글 #해시태그 #익스프레스\",\n      Images: [\n        {\n          src:\n            \"https://i.pinimg.com/originals/8b/10/30/8b1030d543debb94705830c14f005893.jpg\",\n        },\n        {\n          src:\n            \"https://i.pinimg.com/originals/d3/f2/e6/d3f2e6f4da4bfc47a96a0e8aae1fffd4.jpg\",\n        },\n        {\n          src:\n            \"https://i.pinimg.com/originals/84/7f/1b/847f1b9a5d591cdc4a7855e4479de128.jpg\",\n        },\n      ],\n      Comments: [\n        {\n          User: {\n            nickname: \"nero\",\n          },\n          content: \"사랑해요\",\n        },\n        {\n          User: {\n            nickname: \"niro\",\n          },\n          content: \"대박이에요\",\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addComment = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummyPost = (data) => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"devzucca\",\n  },\n  Images: [],\n  Comments: [],\n});\n\nconst dummyComment = (data) => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"devzucca\",\n  },\n});\n// 이전 상태를 액션을 통해 다음상태로 만들어내는 함수 (불변성!!)\nconst reducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.mainPosts = [dummyPost(action.data), ...state.mainPosts];\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}