{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/postform.jsx\";\nimport React, { useCallback, useState, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPost } from \"../../reducers/post\";\n\nconst PostForm = props => {\n  const {\n    addPostDone\n  } = useSle;\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const {\n    imagePaths\n  } = useSelector(state => state.post);\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n  useEffect(() => {\n    if (addPostDone) {}\n  }, [addPostDone]);\n  const OnChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n  }, [text]);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: OnChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: \"right\"\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(v => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: v,\n          style: {\n            width: \"200px\"\n          },\n          alt: v\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/postform.jsx"],"names":["React","useCallback","useState","useRef","Form","Input","Button","useSelector","useDispatch","addPost","PostForm","props","addPostDone","useSle","dispatch","imageInput","imagePaths","state","post","text","setText","useEffect","OnChangeText","e","target","value","onSubmit","onClickImageUpload","current","click","margin","float","map","v","display","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAkBC,MAAxB;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,UAAU,GAAGZ,MAAM,EAAzB;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAiBT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAlC;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AAEAmB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGT,WAAH,EAAgB,CAEf;AACF,GAJQ,EAIN,CAACA,WAAD,CAJM,CAAT;AAMA,QAAMU,YAAY,GAAGrB,WAAW,CAAEsB,CAAD,IAAO;AACtCH,IAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,QAAMC,QAAQ,GAAGzB,WAAW,CAAC,MAAM;AACjCa,IAAAA,QAAQ,CAACL,OAAO,CAACU,IAAD,CAAR,CAAR;AAED,GAH2B,EAGzB,CAACA,IAAD,CAHyB,CAA5B;AAKA,QAAMQ,kBAAkB,GAAG1B,WAAW,CAAC,MAAM;AAC3Cc,IAAAA,UAAU,CAACa,OAAX,CAAmBC,KAAnB;AACD,GAFqC,EAEnC,CAACd,UAAU,CAACa,OAAZ,CAFmC,CAAtC;AAIA,sBACE,QAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,OAAO,EAAC,qBAFV;AAGE,IAAA,QAAQ,EAAEJ,QAHZ;AAAA,4BAKE,QAAC,KAAD,CAAO,QAAP;AACE,MAAA,KAAK,EAAEP,IADT;AAEE,MAAA,QAAQ,EAAEG,YAFZ;AAGE,MAAA,SAAS,EAAE,GAHb;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YALF,eAWE;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,MAAM,MAAlC;AAAmC,QAAA,GAAG,EAAEP;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEY,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAA9B;AAAkD,QAAA,QAAQ,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAkBE;AAAA,gBACGf,UAAU,CAACgB,GAAX,CAAgBC,CAAD,iBACd;AAAa,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAApB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAED,CAAV;AAAa,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAApB;AAAwC,UAAA,GAAG,EAAEF;AAA7C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,iCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAxDD;;AA0DA,eAAevB,QAAf","sourcesContent":["import React, { useCallback, useState, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPost } from \"../../reducers/post\";\n\nconst PostForm = (props) => {\n  const { addPostDone } = useSle\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const { imagePaths } = useSelector((state) => state.post);\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    if(addPostDone) {\n\n    }\n  }, [addPostDone])\n\n  const OnChangeText = useCallback((e) => {\n    setText(e.target.value);\n  }, []);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n   \n  }, [text]);\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  return (\n    <Form\n      style={{ margin: \"10px 0 20px\" }}\n      encType=\"multipart/form-data\"\n      onFinish={onSubmit}\n    >\n      <Input.TextArea\n        value={text}\n        onChange={OnChangeText}\n        maxLength={140}\n        placeholder=\"어떤 신기한 일이 있었나요?\"\n      />\n      <div>\n        <input type=\"file\" multiple hidden ref={imageInput} />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\n          짹짹\n        </Button>\n      </div>\n      <div>\n        {imagePaths.map((v) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img src={v} style={{ width: \"200px\" }} alt={v} />\n            <div>\n              <Button>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}