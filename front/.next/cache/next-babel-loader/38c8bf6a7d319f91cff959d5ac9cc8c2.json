{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post'; // (이전상태, 액션) => 다음상태\n\nvar rootReducer = function rootReducer(state, action) {\n  return combineReducers({\n    index: function index() {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var action = arguments.length > 1 ? arguments[1] : undefined;\n\n      switch (action.type) {\n        case HYDRATE:\n          return _objectSpread(_objectSpread({}, state), action.payload);\n\n        default:\n          return state;\n      }\n    },\n    user: user,\n    post: post\n  });\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/reducers/index.js"],"names":["HYDRATE","combineReducers","user","post","rootReducer","state","action","index","type","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR;AAAA,SAAkBL,eAAe,CAAC;AACpDM,IAAAA,KAAK,EAAE,iBAAwB;AAAA,UAAvBF,KAAuB,uEAAf,EAAe;AAAA,UAAXC,MAAW;;AAC7B,cAAQA,MAAM,CAACE,IAAf;AACE,aAAKR,OAAL;AACE,iDAAYK,KAAZ,GAAsBC,MAAM,CAACG,OAA7B;;AACF;AACE,iBAAOJ,KAAP;AAJJ;AAMD,KARmD;AASpDH,IAAAA,IAAI,EAAJA,IAToD;AAUpDC,IAAAA,IAAI,EAAJA;AAVoD,GAAD,CAAjC;AAAA,CAApB;;AAaA,eAAeC,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\n\n// (이전상태, 액션) => 다음상태\nconst rootReducer = (state, action) =>combineReducers({\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        return { ...state, ...action.payload };\n      default:\n        return state;\n    }\n  },\n  user,\n  post,\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}