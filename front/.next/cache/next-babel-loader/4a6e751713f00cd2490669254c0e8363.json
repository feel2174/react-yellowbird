{"ast":null,"code":"import { all, fork, put, delay, takeLatest, throttle, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(\"/posts\", data);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPost() {\n  yield throttle(5000, LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchRemovePost), fork(watchLoadPost), fork(watchLikePost), fork(watchUnLikePost), fork(watchAddComment), fork(watchUploadImages)]);\n}","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/sagas/post.js"],"names":["all","fork","put","delay","takeLatest","throttle","call","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","addPostAPI","data","post","content","addPost","action","result","type","id","err","error","response","removePostAPI","delete","removePost","addCommentAPI","postId","addComment","console","loadPostAPI","get","loadPost","likePostAPI","patch","likePost","unlikePostAPI","unlikePost","uploadImagesAPI","uploadImages","watchAddPost","watchRemovePost","watchAddComment","watchLoadPost","watchLikePost","watchUnLikePost","watchUploadImages","postSaga"],"mappings":"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","sourcesContent":["import {\n  all,\n  fork,\n  put,\n  delay,\n  takeLatest,\n  throttle,\n  call,\n} from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n\n  LIKE_POST_REQUEST,\n  UNLIKE_POST_REQUEST,\n  LIKE_POST_SUCCESS,\n  LIKE_POST_FAILURE,\n  UNLIKE_POST_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n} from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction addPostAPI(data) {\n  return axios.post(\n    \"/post\",\n    { content: data },\n  );\n}\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(\"/posts\", data);\n}\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPost() {\n  yield throttle(5000, LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchRemovePost),\n    fork(watchLoadPost),\n    fork(watchLikePost),\n    fork(watchUnLikePost),\n    fork(watchAddComment),\n    fork(watchUploadImages),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}