{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers/index';\nimport thunkMiddleware from 'redux-thunk';\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var middlewares = [thunkMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(rootReducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: false // process.env.NODE_ENV === \"development\",\n\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/store/configureStore.js"],"names":["createWrapper","createStore","compose","applyMiddleware","composeWithDevTools","rootReducer","thunkMiddleware","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,eAAP,MAA4B,aAA5B;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SAA2B,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AACxEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAOD,IAAI,CAACC,MAAD,CAAX;AAED,KAJmD;AAAA,GAA3B;AAAA,CAAzB;;AAMA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,WAAW,GAAG,CAACT,eAAD,EAAkBC,gBAAlB,CAApB;AACA,MAAMS,QAAQ,GAAG,QACfd,OAAO,CAACC,eAAe,MAAf,SAAmBY,WAAnB,CAAD,CADQ,GAEfX,mBAAmB,CAACD,eAAe,MAAf,SAAmBY,WAAnB,CAAD,CAFrB;AAGA,MAAME,KAAK,GAAGhB,WAAW,CAACI,WAAD,EAAcW,QAAd,CAAzB;AACA,SAAOC,KAAP;AACH,CAPD;;AASA,IAAMC,OAAO,GAAGlB,aAAa,CAACc,cAAD,EAAiB;AAC5CK,EAAAA,KAAK,EAAE,KADqC,CAE5C;;AAF4C,CAAjB,CAA7B;AAKA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers/index'\nimport thunkMiddleware from 'redux-thunk';\n\nconst loggerMiddleware = ({ dispatch, getState}) => (next) => (action) => {\n  console.log(action);\n  return next(action);\n  \n}\n\nconst configureStore = () => {\n    const middlewares = [thunkMiddleware, loggerMiddleware];\n    const enhancer = process.env.NODE_ENV === \"production\"\n    ? compose(applyMiddleware(...middlewares))\n    : composeWithDevTools(applyMiddleware(...middlewares))\n    const store = createStore(rootReducer, enhancer);\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: false,\n  // process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}