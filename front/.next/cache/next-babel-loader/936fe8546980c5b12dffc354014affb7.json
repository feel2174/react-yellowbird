{"ast":null,"code":"import shortId from \"shortid\";\nimport produce from \"immer\";\nimport faker from \"faker\";\nexport var initialState = {\n  mainPosts: [// {\n    //   id: 1,\n    //   User: {\n    //     id: 1,\n    //     nickname: \"개밍두\",\n    //   },\n    //   content: \"첫번째 게시글 #해시태그 #익스프레스\",\n    //   Images: [\n    //     {\n    //       src:\n    //         \"https://i.pinimg.com/originals/8b/10/30/8b1030d543debb94705830c14f005893.jpg\",\n    //     },\n    //     {\n    //       src:\n    //         \"https://i.pinimg.com/originals/d3/f2/e6/d3f2e6f4da4bfc47a96a0e8aae1fffd4.jpg\",\n    //     },\n    //     {\n    //       src:\n    //         \"https://i.pinimg.com/originals/84/7f/1b/847f1b9a5d591cdc4a7855e4479de128.jpg\",\n    //     },\n    //   ],\n    //   Comments: [\n    //     {\n    //       User: {\n    //         nickname: \"nero\",\n    //       },\n    //       content: \"사랑해요\",\n    //     },\n    //     {\n    //       User: {\n    //         nickname: \"niro\",\n    //       },\n    //       content: \"대박이에요\",\n    //     },\n    //   ],\n    // },\n  ],\n  imagePaths: [],\n  singlePost: null,\n  hasMorePost: true,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null\n};\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.imageUrl()\n      }],\n      Comments: [{\n        User: {\n          id: shortId.generate(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.sentence()\n      }]\n    };\n  });\n};\nexport var LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\nexport var LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\nexport var LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\nexport var LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport var LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport var LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport var LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport var LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport var UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport var UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport var UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport var UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport var UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport var UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\nexport var RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport var RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport var RETWEET_FAILURE = \"RETWEET_FAILURE\";\nexport var REMOVE_IMAGE = \"REMOVE_IMAGE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: \"devzucca\"\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"devzucca\"\n    }\n  };\n}; // 이전 상태를 액션을 통해 다음상태로 만들어내는 함수 (불변성!!)\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        console.error(action.error);\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers = _post.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePost = action.data.length === 10;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Comments.unshift(action.data);\n\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/reducers/post.js"],"names":["shortId","produce","faker","initialState","mainPosts","imagePaths","singlePost","hasMorePost","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","uploadImagesLoading","uploadImagesDone","uploadImagesError","addCommentLoading","addCommentDone","addCommentError","retweetLoading","retweetDone","retweetError","generateDummyPost","number","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","imageUrl","Comments","sentence","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","error","unshift","console","post","find","v","PostId","Likers","push","UserId","filter","concat","length","i"],"mappings":"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","sourcesContent":["import shortId from \"shortid\";\nimport produce from \"immer\";\nimport faker from \"faker\";\n\nexport const initialState = {\n  mainPosts: [\n    // {\n    //   id: 1,\n    //   User: {\n    //     id: 1,\n    //     nickname: \"개밍두\",\n    //   },\n    //   content: \"첫번째 게시글 #해시태그 #익스프레스\",\n    //   Images: [\n    //     {\n    //       src:\n    //         \"https://i.pinimg.com/originals/8b/10/30/8b1030d543debb94705830c14f005893.jpg\",\n    //     },\n    //     {\n    //       src:\n    //         \"https://i.pinimg.com/originals/d3/f2/e6/d3f2e6f4da4bfc47a96a0e8aae1fffd4.jpg\",\n    //     },\n    //     {\n    //       src:\n    //         \"https://i.pinimg.com/originals/84/7f/1b/847f1b9a5d591cdc4a7855e4479de128.jpg\",\n    //     },\n    //   ],\n    //   Comments: [\n    //     {\n    //       User: {\n    //         nickname: \"nero\",\n    //       },\n    //       content: \"사랑해요\",\n    //     },\n    //     {\n    //       User: {\n    //         nickname: \"niro\",\n    //       },\n    //       content: \"대박이에요\",\n    //     },\n    //   ],\n    // },\n  ],\n  imagePaths: [],\n  singlePost: null,\n  hasMorePost: true,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null,\n};\n\nexport const generateDummyPost = (number) =>\n  Array(number)\n    .fill()\n    .map(() => ({\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName(),\n      },\n      content: faker.lorem.paragraph(),\n      Images: [\n        {\n          src: faker.image.imageUrl(),\n        },\n      ],\n      Comments: [\n        {\n          User: {\n            id: shortId.generate(),\n            nickname: faker.name.findName(),\n          },\n          content: faker.lorem.sentence(),\n        },\n      ],\n    }));\n\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\n\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\n\n\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\n\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\n\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\n\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport const RETWEET_FAILURE = \"RETWEET_FAILURE\";\n\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addComment = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummyPost = (data) => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"devzucca\",\n  },\n  Images: [],\n  Comments: [],\n});\n\nconst dummyComment = (data) => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"devzucca\",\n  },\n});\n\n// 이전 상태를 액션을 통해 다음상태로 만들어내는 함수 (불변성!!)\nconst reducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n      case UPLOAD_IMAGES_SUCCESS: {\n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n      case RETWEET_SUCCESS: {\n        draft.retweetLoading = false;\n        draft.retweetDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      }\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        console.error(action.error);\n        break;\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n      case LIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers.push({ id: action.data.UserId });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n      }\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n      case UNLIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        break;\n      }\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePost = action.data.length === 10;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(\n          (v) => v.id !== action.data.PostId\n        );\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n        break;\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}