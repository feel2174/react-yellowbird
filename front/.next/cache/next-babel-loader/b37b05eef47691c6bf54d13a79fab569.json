{"ast":null,"code":"import { all, fork, put, delay, takeLatest, throttle, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWERS_FAILURE } from \"../reducers/user\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", {\n    content: data\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(\"/posts\", data);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPost() {\n  yield throttle(5000, LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchRemovePost), fork(watchLoadPost), fork(watchLikePost), fork(watchUnLikePost), fork(watchAddComment), fork(watchUploadImages)]);\n}","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/sagas/post.js"],"names":["all","fork","put","delay","takeLatest","throttle","call","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWERS_FAILURE","addPostAPI","data","post","content","withCredentials","addPost","action","result","type","id","err","error","response","removePostAPI","delete","removePost","addCommentAPI","postId","addComment","console","loadPostAPI","get","loadPost","likePostAPI","patch","likePost","unlikePostAPI","unlikePost","uploadImagesAPI","uploadImages","UPLOAD","watchAddPost","watchRemovePost","watchAddComment","watchLoadPost","watchLikePost","watchUnLikePost","watchUploadImages","postSaga"],"mappings":"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","sourcesContent":["import {\n  all,\n  fork,\n  put,\n  delay,\n  takeLatest,\n  throttle,\n  call,\n} from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_COMMENT_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_POST_FAILURE,\n\n  LIKE_POST_REQUEST,\n  UNLIKE_POST_REQUEST,\n  LIKE_POST_SUCCESS,\n  LIKE_POST_FAILURE,\n  UNLIKE_POST_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n} from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWERS_FAILURE } from \"../reducers/user\";\n\nfunction addPostAPI(data) {\n  return axios.post(\n    \"/post\",\n    { content: data },\n    {\n      withCredentials: true,\n    }\n  );\n}\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(\"/posts\", data);\n}\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n\nfunction uploadImagesAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD,\n      error: err.response.data,\n    });\n  }\n}\n\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPost() {\n  yield throttle(5000, LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchRemovePost),\n    fork(watchLoadPost),\n    fork(watchLikePost),\n    fork(watchUnLikePost),\n    fork(watchAddComment),\n    fork(watchUploadImages),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}