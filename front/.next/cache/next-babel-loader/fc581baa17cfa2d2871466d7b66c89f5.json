{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/post/[id].js\";\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { END } from \"redux-saga\";\nimport Axios from \"axios\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport wrapper from \"../../store/configureStore\";\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostCard from \"../components/PostForm/PostCard\";\nimport { useSelector } from \"react-redux\";\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: /*#__PURE__*/_jsxDEV(PostCard, {\n      post: singlePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  Axios.defaults.headers.Cookie = \"\";\n\n  if (context.req && cookie) {\n    Axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/post/[id].js"],"names":["React","useRouter","END","Axios","LOAD_MY_INFO_REQUEST","wrapper","LOAD_POST_REQUEST","AppLayout","PostCard","useSelector","Post","router","id","query","singlePost","state","post","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","params","sagaTask","toPromise"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AAAEW,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiBL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAlC;AACA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CATD;;AAWA,OAAO,MAAMG,kBAAkB,GAAGZ,OAAO,CAACY,kBAAR,CAChC,MAAOC,OAAP,IAAmB;AACjB,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAhB,EAAAA,KAAK,CAACmB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBhB,IAAAA,KAAK,CAACmB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEtB;AADe,GAAvB;AAGAc,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEpB,iBADe;AAErBqB,IAAAA,IAAI,EAAET,OAAO,CAACU,MAAR,CAAehB;AAFA,GAAvB;AAIAM,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBvB,GAAvB;AACA,QAAMgB,OAAO,CAACM,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAhB+B,CAA3B;AAmBP,eAAepB,IAAf","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\n\nimport { END } from \"redux-saga\";\nimport Axios from \"axios\";\n\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport wrapper from \"../../store/configureStore\";\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostCard from \"../components/PostForm/PostCard\";\nimport { useSelector } from \"react-redux\";\n\nconst Post = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  const { singlePost } = useSelector((state) => state.post);\n  return (\n    <AppLayout>\n      <PostCard post={singlePost} />\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    Axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      Axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch({\n      type: LOAD_POST_REQUEST,\n      data: context.params.id,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}