{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/CommentForm.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ADD_COMMENT_REQUEST } from '../../reducers/post';\nimport { useSelector, useDispatch } from 'react-redux';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }),\n      id = _useSelector.id;\n\n  var addCommentDone = useSelector.addCommentDone;\n\n  var _useState = useState(''),\n      commentText = _useState[0],\n      setCommentText = _useState[1];\n\n  useEffect(function () {\n    if (addCommentDone) {\n      setText('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText]);\n  var onChangeCommentText = useCallback(function (e) {\n    setCommentText(e.target.value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        rows: 4,\n        value: commentText,\n        onChange: onChangeCommentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CommentForm, \"/0OlH0ZjC8mWgt3e3RWOkpp/KPI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/CommentForm.jsx"],"names":["Button","Form","Input","React","useCallback","useState","useEffect","PropTypes","ADD_COMMENT_REQUEST","useSelector","useDispatch","CommentForm","post","dispatch","state","user","me","id","addCommentDone","commentText","setCommentText","setText","onSubmitComment","type","data","content","postId","userId","onChangeCommentText","e","target","value","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAEhC,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;;AAFgC,qBAGjBD,WAAW,CAAC,UAACK,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeC,EAA1B;AAAA,GAAD,CAHM;AAAA,MAGxBA,EAHwB,gBAGxBA,EAHwB;;AAAA,MAIzBC,cAJyB,GAINT,WAJM,CAIzBS,cAJyB;;AAAA,kBAKMb,QAAQ,CAAC,EAAD,CALd;AAAA,MAKzBc,WALyB;AAAA,MAKZC,cALY;;AAOhCd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGY,cAAH,EAAmB;AACjBG,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GAJQ,EAIN,CAACH,cAAD,CAJM,CAAT;AAOA,MAAMI,eAAe,GAAGlB,WAAW,CAAC,YAAM;AACxCS,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEf,mBADC;AAEPgB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEN,WAAX;AAAwBO,QAAAA,MAAM,EAAEd,IAAI,CAACK,EAArC;AAAyCU,QAAAA,MAAM,EAAEV;AAAjD;AAFC,KAAD,CAAR;AAID,GALkC,EAKhC,CAACE,WAAD,CALgC,CAAnC;AAOA,MAAMS,mBAAmB,GAAGxB,WAAW,CAAC,UAACyB,CAAD,EAAO;AAC7CT,IAAAA,cAAc,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAET,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEU,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,IAAI,EAAE,CAAtB;AAAyB,QAAA,KAAK,EAAEd,WAAhC;AAA6C,QAAA,QAAQ,EAAES;AAAvD;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEI,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC;AAA3C,SAAf;AAAgE,QAAA,IAAI,EAAC,SAArE;AAA+E,QAAA,QAAQ,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAjCD;;GAAMxB,W;UAEaD,W,EACFD,W;;;KAHXE,W;AAmCNA,WAAW,CAACyB,SAAZ,GAAwB;AACtBxB,EAAAA,IAAI,EAAEL,SAAS,CAAC8B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAe3B,WAAf","sourcesContent":["import { Button, Form, Input } from 'antd';\nimport React, { useCallback, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ADD_COMMENT_REQUEST } from '../../reducers/post';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst CommentForm = ({ post }) => {\n\n  const dispatch = useDispatch();\n  const { id } = useSelector((state) => state.user.me?.id);\n  const {addCommentDone } = useSelector\n  const [commentText, setCommentText] = useState('');\n  \n  useEffect(() => {\n    if(addCommentDone) {\n      setText('');\n    }\n  }, [addCommentDone])\n\n\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, postId: post.id, userId: id }\n    })\n  }, [commentText]);\n\n  const onChangeCommentText = useCallback((e) => {\n    setCommentText(e.target.value);\n  }, []);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: 'relative', margin: 0 }}>\n        <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\n        <Button style={{ position: 'absolute', right: 0, bottom: -40 }} type=\"primary\" htmlType=\"submit\">삐약</Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}