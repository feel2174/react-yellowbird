{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/PostForm/PostForm.jsx\";\nimport React, { useEffect, useCallback, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from \"../../../reducers/post\";\nimport useInput from \"../../hooks/useInput\";\n\nconst PostForm = () => {\n  const {\n    addPostDone,\n    imagePaths\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const [text, onChangeText, setText] = useInput(\"\");\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  const onSubmitForm = useCallback(() => {\n    console.log(\"clicked~\");\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: text\n    });\n  }, [text]);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    console.log(\"images\", e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append(\"image\", f);\n      dispatch({\n        type: UPLOAD_IMAGES_REQUEST,\n        data: imageFormData\n      });\n    });\n  }, []);\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: \"right\"\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map((v, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:3065/${v}`,\n          style: {\n            width: \"200px\"\n          },\n          alt: v\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onRemoveImage(i),\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/PostForm/PostForm.jsx"],"names":["React","useEffect","useCallback","useRef","Form","Input","Button","useSelector","useDispatch","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","ADD_POST_REQUEST","useInput","PostForm","addPostDone","imagePaths","state","post","dispatch","imageInput","text","onChangeText","setText","onSubmitForm","console","log","type","data","onClickImageUpload","current","click","onChangeImages","e","target","files","imageFormData","FormData","forEach","call","f","append","onRemoveImage","index","margin","float","map","v","i","display","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from \"../../../reducers/post\";\nimport useInput from \"../../hooks/useInput\";\n\nconst PostForm = () => {\n  const { addPostDone, imagePaths } = useSelector((state) => state.post);\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const [text, onChangeText, setText] = useInput(\"\");\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n\n  const onSubmitForm = useCallback(() => {\n    console.log(\"clicked~\");\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: text\n    });\n  }, [text]);\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onChangeImages = useCallback((e) => {\n    console.log(\"images\", e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f);\n      dispatch({\n        type: UPLOAD_IMAGES_REQUEST,\n        data: imageFormData,\n      });\n    });\n  }, []);\n\n  const onRemoveImage = useCallback((index) => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index,\n    });\n  }, []);\n\n  return (\n    <Form\n      style={{ margin: \"10px 0 20px\" }}\n      encType=\"multipart/form-data\"\n      onFinish={onSubmitForm}\n    >\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"어떤 신기한 일이 있었나요?\"\n      />\n      <div>\n        <input\n          type=\"file\"\n          name=\"image\"\n          multiple\n          hidden\n          ref={imageInput}\n          onChange={onChangeImages}\n        />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\n          짹짹\n        </Button>\n      </div>\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img\n              src={`http://localhost:3065/${v}`}\n              style={{ width: \"200px\" }}\n              alt={v}\n            />\n            <div>\n              <Button onClick={onRemoveImage(i)}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}