{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/postcard.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useSelector } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design';\nimport ButtonGroup from 'antd/lib/button/button-group';\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useSelector = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }),\n      id = _useSelector.id;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 42\n      }, _this),\n      action: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [id && post.User.id === id && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \" \", /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 31\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"cU5nkyctemZZKEci2xR5hEayVcQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/postcard.jsx"],"names":["React","useSelector","PropTypes","Card","Popover","Button","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","ButtonGroup","PostCard","post","state","user","me","id","Images","User","propTypes","shape","number","object","content","string","createdAt","Comments","arrayOf","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,QAAsC,MAAtC;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,eAAzC,EAA0DC,gBAA1D,QAAkF,aAAlF;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,qBACZX,WAAW,CAAC,UAACY,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeC,EAA1B;AAAA,GAAD,CADC;AAAA,MACnBA,EADmB,gBACnBA,EADmB;;AAG3B,sBACI;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ,kBAAkB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEL,IAAI,CAACK;AAAzB;AAAA;AAAA;AAAA;AAAA,eAD7B;AAEI,MAAA,MAAM,EAAE,cACJ,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,eADI,eAEJ,QAAC,aAAD,MAAmB,OAAnB;AAAA;AAAA;AAAA;AAAA,eAFI,eAGJ,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,eAHI,eAIJ,QAAC,OAAD;AAAoB,QAAA,OAAO,eACvB,QAAC,WAAD;AAAA,qBACID,EAAE,IAAIJ,IAAI,CAACM,IAAL,CAAUF,EAAV,KAAiBA,EAAvB,iBACG,qCAFP,oBAIM,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJN,eAKI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,eAMI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAAA,+BAUI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAVJ,SAAa,MAAb;AAAA;AAAA;AAAA;AAAA,eAJI;AAFZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AA2BH,CA9BD;;GAAML,Q;UACaV,W;;;KADbU,Q;AAgCNA,QAAQ,CAACQ,SAAT,GAAqB;AACjBP,EAAAA,IAAI,EAAEV,SAAS,CAACkB,KAAV,CAAgB;AAClBJ,IAAAA,EAAE,EAAEd,SAAS,CAACmB,MADI;AAElBH,IAAAA,IAAI,EAAEhB,SAAS,CAACoB,MAFE;AAGlBC,IAAAA,OAAO,EAAErB,SAAS,CAACsB,MAHD;AAIlBC,IAAAA,SAAS,EAAEvB,SAAS,CAACoB,MAJH;AAKlBI,IAAAA,QAAQ,EAAExB,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAACoB,MAA5B,CALQ;AAMlBL,IAAAA,MAAM,EAAEf,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAACoB,MAA5B;AANU,GAAhB,EAOHM;AARc,CAArB;AAWA,eAAejB,QAAf","sourcesContent":["import React, { useSelector } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design'\nimport ButtonGroup from 'antd/lib/button/button-group';\n\nconst PostCard = ({ post }) => {\n    const { id } = useSelector((state) => state.user.me?.id);\n\n    return (\n        <div>\n            <Card\n                cover={post.Images[0] && <PostImages images={post.Images}/> }\n                action={[\n                    <RetweetOutlined key=\"retweet\"/>,\n                    <HeartOutlined key=\"heart\"/>,\n                    <MessageOutlined key=\"comment\"/>,\n                    <Popover key=\"more\" content={(\n                        <ButtonGroup>\n                           {id && post.User.id === id && (\n                               <>\n                               </>\n                           )} <Button >수정</Button>\n                            <Button type=\"danger\">삭제</Button>\n                            <Button>신고</Button>\n                        </ButtonGroup>\n                    )}>\n                        <EllipsisOutlined />\n                    </Popover>\n\n                ]}\n            >\n\n            </Card>\n        </div>\n    );\n}\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        id: PropTypes.number,\n        User: PropTypes.object,\n        content: PropTypes.string,\n        createdAt: PropTypes.object,\n        Comments: PropTypes.arrayOf(PropTypes.object),\n        Images: PropTypes.arrayOf(PropTypes.object)\n    }).isRequired\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}