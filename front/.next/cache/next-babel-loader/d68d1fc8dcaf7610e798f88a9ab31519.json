{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers/index';\nimport thunkMiddleware from 'redux-thunk';\n\nconst configureStore = () => {\n  const middlewares = [thunkMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(rootReducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: false // process.env.NODE_ENV === \"development\",\n\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/store/configureStore.js"],"names":["createWrapper","createStore","compose","applyMiddleware","composeWithDevTools","rootReducer","thunkMiddleware","configureStore","middlewares","loggerMiddleware","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,eAAP,MAA4B,aAA5B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAG,CAACF,eAAD,EAAkBG,gBAAlB,CAApB;AACA,QAAMC,QAAQ,GAAG,QACfR,OAAO,CAACC,eAAe,CAAC,GAAGK,WAAJ,CAAhB,CADQ,GAEfJ,mBAAmB,CAACD,eAAe,CAAC,GAAGK,WAAJ,CAAhB,CAFrB;AAGA,QAAMG,KAAK,GAAGV,WAAW,CAACI,WAAD,EAAcK,QAAd,CAAzB;AACA,SAAOC,KAAP;AACH,CAPD;;AASA,MAAMC,OAAO,GAAGZ,aAAa,CAACO,cAAD,EAAiB;AAC5CM,EAAAA,KAAK,EAAE,KADqC,CAE5C;;AAF4C,CAAjB,CAA7B;AAKA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers/index'\nimport thunkMiddleware from 'redux-thunk';\n\nconst configureStore = () => {\n    const middlewares = [thunkMiddleware, loggerMiddleware];\n    const enhancer = process.env.NODE_ENV === \"production\"\n    ? compose(applyMiddleware(...middlewares))\n    : composeWithDevTools(applyMiddleware(...middlewares))\n    const store = createStore(rootReducer, enhancer);\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: false,\n  // process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}