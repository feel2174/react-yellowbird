{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport shortId from 'shortid';\nimport postSaga from '../sagas/post';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '개밍두'\n    },\n    content: '첫번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://i.pinimg.com/originals/8b/10/30/8b1030d543debb94705830c14f005893.jpg'\n    }, {\n      src: 'https://i.pinimg.com/originals/d3/f2/e6/d3f2e6f4da4bfc47a96a0e8aae1fffd4.jpg'\n    }, {\n      src: 'https://i.pinimg.com/originals/84/7f/1b/847f1b9a5d591cdc4a7855e4479de128.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '사랑해요'\n    }, {\n      User: {\n        nickname: 'niro'\n      },\n      content: '대박이에요'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'devzucca'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'devzucca'\n    }\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var post = _objectSpread({}, state.mainPosts[postIndex]);\n\n        var Comments = [dummyComment(action.data.content)].concat(_toConsumableArray(post.Comments));\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = _objectSpread(_objectSpread({}, post), {}, {\n          Comments: Comments\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: false,\n          addCommentDone: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/reducers/post.js"],"names":["shortId","postSaga","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","generate","dummyComment","reducer","state","action","error","postIndex","findIndex","v","postId","post"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\nimport postSaga from '../sagas/post';\n\nexport const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: '개밍두',\n      },\n      content: '첫번째 게시글 #해시태그 #익스프레스',\n      Images: [\n        {\n          src:\n            'https://i.pinimg.com/originals/8b/10/30/8b1030d543debb94705830c14f005893.jpg',\n        },\n        {\n          src:\n            'https://i.pinimg.com/originals/d3/f2/e6/d3f2e6f4da4bfc47a96a0e8aae1fffd4.jpg',\n        },\n        {\n          src:\n            'https://i.pinimg.com/originals/84/7f/1b/847f1b9a5d591cdc4a7855e4479de128.jpg',\n        },\n      ],\n      Comments: [\n        {\n          User: {\n            nickname: 'nero',\n          },\n          content: '사랑해요',\n        },\n        {\n          User: {\n            nickname: 'niro',\n          },\n          content: '대박이에요',\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\n\nexport const addComment = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummyPost = (data) => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: 'devzucca',\n  },\n  Images: [],\n  Comments: [],\n});\n\nconst dummyComment = (data) => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: 'devzucca',\n  },\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return {\n        ...state,\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null,\n      };\n    case ADD_POST_SUCCESS:\n      return {\n        ...state,\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\n        addPostLoading: false,\n        addPostDone: true,\n      };\n    case ADD_POST_FAILURE:\n      return {\n        ...state,\n        addCommentLoading: false,\n        addCommentError: action.error,\n      };\n    case ADD_COMMENT_REQUEST:\n      return {\n        ...state,\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null,\n      };\n    case ADD_COMMENT_SUCCESS: {\n      const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n      const post = { ...state.mainPosts[postIndex] };\n      const Comments = [dummyComment(action.data.content), ...post.Comments];\n      const mainPosts = [...state.mainPosts];\n      mainPosts[postIndex] = { ...post, Comments };\n      return {\n        ...state,\n        addCommentLoading: false,\n        addCommentDone: true,\n      };\n    }\n    case ADD_COMMENT_FAILURE:\n      return {\n        ...state,\n        addCommentLoading: false,\n        addCommentError: action.error,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}