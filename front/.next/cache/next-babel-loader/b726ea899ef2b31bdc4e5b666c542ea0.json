{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/PostForm/PostForm.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback, useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addPost, UPLOAD_IMAGES_REQUEST } from '../../../reducers/post';\nimport useInput from '../../hooks/useInput';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addPostDone = _useSelector.addPostDone,\n      imagePaths = _useSelector.imagePaths;\n\n  var dispatch = useDispatch();\n  var imageInput = useRef();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onSubmitForm = useCallback(function () {\n    console.log('clicked~');\n    dispatch(addPost(text));\n  }, [text]);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log('images', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n      dispatch({\n        type: UPLOAD_IMAGES_REQUEST,\n        data: imageFormData\n      });\n    });\n  }, []);\n  var onRemoveImage = useCallback(function (e) {\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3065/\".concat(v),\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onRemoveImage(i),\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostForm, \"Mz9nT3r2w+22r8LTxO7WU9q4nYg=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/PostForm/PostForm.jsx"],"names":["React","useEffect","useCallback","useRef","Form","Input","Button","useSelector","useDispatch","addPost","UPLOAD_IMAGES_REQUEST","useInput","PostForm","state","post","addPostDone","imagePaths","dispatch","imageInput","text","onChangeText","setText","onSubmitForm","console","log","onClickImageUpload","current","click","onChangeImages","e","target","files","imageFormData","FormData","forEach","call","f","append","type","data","onRemoveImage","margin","map","v","i","display","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addPost, UPLOAD_IMAGES_REQUEST } from '../../../reducers/post';\nimport useInput from '../../hooks/useInput';\n\nconst PostForm = () => {\n  const { addPostDone, imagePaths } = useSelector((state) => state.post);\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const [text, onChangeText, setText] = useInput('');\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n\n  const onSubmitForm = useCallback(() => {\n    console.log('clicked~');\n    dispatch(addPost(text));\n  }, [text]);\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onChangeImages = useCallback((e) => {\n    console.log('images', e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append('image', f);\n      dispatch({\n        type: UPLOAD_IMAGES_REQUEST,\n        data: imageFormData,\n      })\n    });    \n  }, []);\n\n  const onRemoveImage = useCallback((e) => {\n   \n      dispatch({\n        type: UPLOAD_IMAGES_REQUEST,\n        data: imageFormData,\n     \n    });    \n  }, []);\n\n\n\n  return (\n    <Form\n      style={{ margin: '10px 0 20px' }}\n      encType=\"multipart/form-data\"\n      onFinish={onSubmitForm}\n    >\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"어떤 신기한 일이 있었나요?\"\n      />\n      <div>\n        <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">\n          짹짹\n        </Button>\n      </div>\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{ display: 'inline-block' }}>\n            <img src={`http://localhost:3065/${v}`} style={{ width: '200px' }} alt={v} />\n            <div>\n              <Button onClick={onRemoveImage(i)}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}