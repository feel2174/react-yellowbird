{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/CommentForm.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { Form } from 'antd';\nimport useInput from '../hooks/useInput';\n\nvar CommentForm = function CommentForm(props) {\n  _s();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {}, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: \"\\uD3FC\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"zY36UX01FvwcFQZaTMZwANtp89M=\", false, function () {\n  return [useInput];\n});\n\n_c = CommentForm;\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/CommentForm.jsx"],"names":["React","useCallback","Form","useInput","CommentForm","props","commentText","onChangeCommentText","onSubmitComment"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACgBF,QAAQ,CAAC,EAAD,CADxB;AAAA;AAAA,MACpBG,WADoB;AAAA,MACPC,mBADO;;AAE3B,MAAMC,eAAe,GAAGP,WAAW,CAAC,YAAM,CAEzC,CAFkC,EAEhC,CAACK,WAAD,CAFgC,CAAnC;AAGA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAVD;;GAAMJ,W;UACyCD,Q;;;KADzCC,W;AAYN,eAAeA,WAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { Form } from 'antd';\nimport useInput from '../hooks/useInput';\n\nconst CommentForm = (props) => {\n    const [commentText, onChangeCommentText] = useInput('');\n    const onSubmitComment = useCallback(() => {\n\n    }, [commentText])\n    return (\n        <Form onFinish={onSubmitComment}>\n            Ìèº\n        </Form>\n    )\n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}