{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/PostForm/PostForm.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from \"../../../reducers/post\";\nimport useInput from \"../../hooks/useInput\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addPostDone = _useSelector.addPostDone,\n      imagePaths = _useSelector.imagePaths;\n\n  var dispatch = useDispatch();\n  var imageInput = useRef();\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  var onSubmitForm = useCallback(function () {\n    console.log(\"clicked~\");\n    var formData = new FormData();\n    imagePaths, forEach(function (p) {\n      formData.append('image', i);\n    });\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: text\n    });\n  }, [text]);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log(\"images\", e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append(\"image\", f);\n      dispatch({\n        type: UPLOAD_IMAGES_REQUEST,\n        data: imageFormData\n      });\n    });\n  }, []);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": \"right\"\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3065/\".concat(v),\n            style: {\n              width: \"200px\"\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onRemoveImage(i),\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostForm, \"Mz9nT3r2w+22r8LTxO7WU9q4nYg=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/PostForm/PostForm.jsx"],"names":["React","useEffect","useCallback","useRef","Form","Input","Button","useSelector","useDispatch","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","ADD_POST_REQUEST","useInput","PostForm","state","post","addPostDone","imagePaths","dispatch","imageInput","text","onChangeText","setText","onSubmitForm","console","log","formData","FormData","forEach","p","append","i","type","data","onClickImageUpload","current","click","onChangeImages","e","target","files","imageFormData","call","f","onRemoveImage","index","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from \"../../../reducers/post\";\nimport useInput from \"../../hooks/useInput\";\n\nconst PostForm = () => {\n  const { addPostDone, imagePaths } = useSelector((state) => state.post);\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const [text, onChangeText, setText] = useInput(\"\");\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n\n  const onSubmitForm = useCallback(() => {\n    console.log(\"clicked~\");\n    const formData = new FormData();\n    imagePaths,forEach((p) => {\n      formData.append('image', i)\n    })\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: text,\n    });\n  }, [text]);\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onChangeImages = useCallback((e) => {\n    console.log(\"images\", e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f);\n      dispatch({\n        type: UPLOAD_IMAGES_REQUEST,\n        data: imageFormData,\n      });\n    });\n  }, []);\n\n  const onRemoveImage = useCallback((index) => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index,\n    });\n  }, []);\n\n  return (\n    <Form\n      style={{ margin: \"10px 0 20px\" }}\n      encType=\"multipart/form-data\"\n      onFinish={onSubmitForm}\n    >\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"어떤 신기한 일이 있었나요?\"\n      />\n      <div>\n        <input\n          type=\"file\"\n          name=\"image\"\n          multiple\n          hidden\n          ref={imageInput}\n          onChange={onChangeImages}\n        />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\n          짹짹\n        </Button>\n      </div>\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img\n              src={`http://localhost:3065/${v}`}\n              style={{ width: \"200px\" }}\n              alt={v}\n            />\n            <div>\n              <Button onClick={onRemoveImage(i)}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}