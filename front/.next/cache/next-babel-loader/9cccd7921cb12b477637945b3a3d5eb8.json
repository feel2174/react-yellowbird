{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/CommentForm.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {\n    console.log();\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 16\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"zY36UX01FvwcFQZaTMZwANtp89M=\", false, function () {\n  return [useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/CommentForm.jsx"],"names":["React","useCallback","Form","Input","Button","useInput","PropTypes","CommentForm","post","commentText","onChangeCommentText","onSubmitComment","console","log","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACaH,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,MACvBI,WADuB;AAAA,MACVC,mBADU;;AAE9B,MAAMC,eAAe,GAAGV,WAAW,CAAC,YAAM;AAC9BW,IAAAA,OAAO,CAACC,GAAR;AAEX,GAHkC,EAGhC,CAACJ,WAAD,CAHgC,CAAnC;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA,2BACG,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEF,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CAfD;;GAAMH,W;UACyCF,Q;;;KADzCE,W;AAiBNA,WAAW,CAACO,SAAZ,GAAwB;AACpBN,EAAAA,IAAI,EAAEF,SAAS,CAACS,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAeT,WAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport useInput from '../hooks/useInput';\nimport PropTypes from 'prop-types';\n\nconst CommentForm = ({ post }) => {\n    const [commentText, onChangeCommentText] = useInput('');\n    const onSubmitComment = useCallback(() => {\n                console.log();\n                \n    }, [commentText])\n\n    return (\n        <Form onFinish={onSubmitComment}>\n           <Form.Item>\n               <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\n               <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\n           </Form.Item>\n        </Form>\n    )\n}\n\nCommentForm.propTypes = {\n    post: PropTypes.object.isRequired\n}\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}