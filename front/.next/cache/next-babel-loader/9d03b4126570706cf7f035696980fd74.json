{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/index.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AppLayout from \"./components/AppLayout\";\nimport PostForm from \"./components/PostForm/PostForm\";\nimport PostCard from \"./components/PostForm/PostCard\";\nimport { LOAD_POST_REQUEST } from \"../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\nimport wrapper from '../store/configureStore';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostsLoading,\n    retweetError\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 500) {\n        if (hasMorePost && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [mainPosts, hasMorePost, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(context => {\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  dispatch({\n    type: LOAD_POST_REQUEST\n  });\n});\nexport default Home;","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/index.js"],"names":["React","useEffect","useSelector","useDispatch","AppLayout","PostForm","PostCard","LOAD_POST_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","Home","dispatch","me","state","user","mainPosts","hasMorePost","loadPostsLoading","retweetError","post","alert","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","addEventListener","removeEventListener","map","getServerSideProps","context","store"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA;AAAF,MAASV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,gBAHI;AAIJC,IAAAA;AAJI,MAKFhB,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACM,IAAlB,CALf;AAOAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,YAAJ,EAAkB;AAChBE,MAAAA,KAAK,CAACF,YAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACd,aAASoB,QAAT,GAAoB;AAClB,UACEC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIX,WAAW,IAAI,CAACC,gBAApB,EAAsC;AAAA;;AACpC,gBAAMW,MAAM,iBAAGb,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;AACAnB,UAAAA,QAAQ,CAAC;AACPoB,YAAAA,IAAI,EAAExB,iBADC;AAEPqB,YAAAA;AAFO,WAAD,CAAR;AAID;AACF;AACF;;AACDN,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCX,QAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCZ,QAArC;AACD,KAFD;AAGD,GAnBQ,EAmBN,CAACN,SAAD,EAAYC,WAAZ,EAAyBC,gBAAzB,CAnBM,CAAT;AAqBA,sBACE,QAAC,SAAD;AAAA,eACGL,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADT,EAEGG,SAAS,CAACmB,GAAV,CAAef,IAAD,iBACb,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACW,EAApB;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA9CD;;AAgDA,OAAO,MAAMK,kBAAkB,GAAG1B,OAAO,CAAC0B,kBAAR,CAA4BC,OAAD,IAAa;AAExEA,EAAAA,OAAO,CAACC,KAAR,CAAc1B,QAAd,CAAuB;AACrBoB,IAAAA,IAAI,EAAEvB;AADe,GAAvB;AAGAG,EAAAA,QAAQ,CAAC;AACPoB,IAAAA,IAAI,EAAExB;AADC,GAAD,CAAR;AAID,CATiC,CAA3B;AAWP,eAAeG,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AppLayout from \"./components/AppLayout\";\nimport PostForm from \"./components/PostForm/PostForm\";\nimport PostCard from \"./components/PostForm/PostCard\";\nimport { LOAD_POST_REQUEST } from \"../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\nimport wrapper from '../store/configureStore'\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostsLoading,\n    retweetError,\n  } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n\n\n  useEffect(() => {\n    function onScroll() {\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 500\n      ) {\n        if (hasMorePost && !loadPostsLoading) {\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            lastId,\n          });\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [mainPosts, hasMorePost, loadPostsLoading]);\n\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post) => (\n        <PostCard key={post.id} post={post} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps((context) => {\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  dispatch({\n    type: LOAD_POST_REQUEST,\n  });\n\n});\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}