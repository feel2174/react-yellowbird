{"ast":null,"code":"import { all, fork, put, delay, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  console.log('addPost');\n\n  try {\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_REQUEST\n    }); //const result = yield call(addPostAPI, action.data);\n\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.id}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_REQUEST\n    }); //const result = yield call(addCommentAPI, action.data);\n\n    yield put({\n      type: ADD_COMMENT_SUCCESS //  data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/sagas/post.js"],"names":["all","fork","put","delay","takeLatest","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","data","post","addPost","action","console","log","type","err","error","response","addCommentAPI","id","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,KAAzB,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EAA+DC,mBAA/D,EAAoFC,mBAApF,EAAyGC,mBAAzG,QAAoI,kBAApI;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOR,KAAK,CAACS,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD;;AACD,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AAEA,MAAI;AACF,UAAMf,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRiB,MAAAA,IAAI,EAAEb;AADE,KAAD,CAAT,CAFE,CAKF;;AACA,UAAMJ,GAAG,CAAC;AACRiB,MAAAA,IAAI,EAAEZ,gBADE;AAERM,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAVD,CAUE,OAAOO,GAAP,EAAY;AACZ,UAAMlB,GAAG,CAAC;AACRiB,MAAAA,IAAI,EAAEX,gBADE;AAERa,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASU,aAAT,CAAuBV,IAAvB,EAA6B;AAC3B,SAAOR,KAAK,CAACS,IAAN,CAAY,aAAYD,IAAI,CAACW,EAAG,UAAhC,EAA2CX,IAA3C,CAAP;AACD;;AACD,UAAUY,UAAV,CAAqBT,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMb,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRiB,MAAAA,IAAI,EAAEV;AADE,KAAD,CAAT,CAFE,CAKF;;AACA,UAAMP,GAAG,CAAC;AACRiB,MAAAA,IAAI,EAAET,mBADE,CAER;;AAFQ,KAAD,CAAT;AAID,GAVD,CAUE,OAAOU,GAAP,EAAY;AACZ,UAAMlB,GAAG,CAAC;AACRiB,MAAAA,IAAI,EAAER,mBADE;AAERU,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUa,YAAV,GAAyB;AACvB,QAAMtB,UAAU,CAACE,gBAAD,EAAmBS,OAAnB,CAAhB;AACD;;AACD,UAAUY,eAAV,GAA4B;AAC1B,QAAMvB,UAAU,CAACK,mBAAD,EAAsBgB,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACyB,YAAD,CAAL,EAAqBzB,IAAI,CAAC0B,eAAD,CAAzB,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, put, delay, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\nfunction* addPost(action) {\n  console.log('addPost');\n  \n  try {\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_REQUEST,\n    });\n    //const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.id}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_REQUEST,\n    });\n    //const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      //  data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n"]},"metadata":{},"sourceType":"module"}