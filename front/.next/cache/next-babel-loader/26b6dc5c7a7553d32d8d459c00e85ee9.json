{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/CommentForm.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(\"\"),\n      commentText = _useState[0],\n      setCommentText = _useState[1];\n\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  var onChangeCommentText = useCallback(function (e) {\n    setCommentText(e.target.value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: \"relative\",\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        rows: 4,\n        value: commentText,\n        onChange: onChangeCommentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: \"absolute\",\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CommentForm, \"bfHVRo5YzqfTGb2A2nmKSSCVl3w=\");\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/youngjoo/Downloads/projects/react-nodebird/front/pages/components/CommentForm.jsx"],"names":["React","useCallback","useState","Form","Input","Button","PropTypes","CommentForm","post","commentText","setCommentText","onSubmitComment","console","log","id","onChangeCommentText","e","target","value","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACMN,QAAQ,CAAC,EAAD,CADd;AAAA,MACzBO,WADyB;AAAA,MACZC,cADY;;AAGhC,MAAMC,eAAe,GAAGV,WAAW,CAAC,YAAM;AACxCW,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,EAAjB,EAAqBL,WAArB;AACD,GAFkC,EAEhC,CAACA,WAAD,CAFgC,CAAnC;AAIA,MAAMM,mBAAmB,GAAGd,WAAW,CAAC,UAACe,CAAD,EAAO;AAC7CN,IAAAA,cAAc,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEP,eAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEQ,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AACE,QAAA,IAAI,EAAE,CADR;AAEE,QAAA,KAAK,EAAEX,WAFT;AAGE,QAAA,QAAQ,EAAEM;AAHZ;AAAA;AAAA;AAAA;AAAA,eADF,eAME,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEI,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC;AAA3C,SADT;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,QAAQ,EAAC,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAkBD,CA7BD;;GAAMf,W;;KAAAA,W;AA+BNA,WAAW,CAACgB,SAAZ,GAAwB;AACtBf,EAAAA,IAAI,EAAEF,SAAS,CAACkB,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAelB,WAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst CommentForm = ({ post }) => {\n  const [commentText, setCommentText] = useState(\"\");\n\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n  }, [commentText]);\n\n  const onChangeCommentText = useCallback((e) => {\n    setCommentText(e.target.value);\n  }, []);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: \"relative\", margin: 0 }}>\n        <Input.TextArea\n          rows={4}\n          value={commentText}\n          onChange={onChangeCommentText}\n        />\n        <Button\n          style={{ position: \"absolute\", right: 0, bottom: -40 }}\n          type=\"primary\"\n          htmlType=\"submit\"\n        >\n          삐약\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}